version: "3.8"

services:
  dashboard:
    build:
      context: ./
      dockerfile: src/dashboard/Dockerfile
    restart: always
    environment:
      - "LOGGING_ENABLED=false"
      - "ENABLE_API=false"
      - "ORACLE_DB_FROM_ENV=false"
      - "SQL_LITE=false"
      - "POSTGRE_DB_FROM_ENV=true"
      - "POSTGRE_USER=${POSTGRE_USER}"
      - "POSTGRE_PASSWORD=${POSTGRE_PASSWORD}"
      - "POSTGRE_DB=${POSTGRE_DB}"
      - "POSTGRE_HOST=${POSTGRE_HOST}"
      - "POSTGRE_PORT=${POSTGRE_PORT}"
      - "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
      - "AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}"
      - "SNS_TOPIC_ARN=${SNS_TOPIC_ARN}"
      - "SNS_REGION=${SNS_REGION}"
    ports:
      - "${DASHBOARD_PORT}:8501"

  api:
    build:
      context: ./
      dockerfile: src/api/Dockerfile
    restart: always
    environment:
      - "LOGGING_ENABLED=false"
      - "ENABLE_API=false"
      - "ORACLE_DB_FROM_ENV=false"
      - "SQL_LITE=false"
      - "POSTGRE_DB_FROM_ENV=true"
      - "POSTGRE_USER=${POSTGRE_USER}"
      - "POSTGRE_PASSWORD=${POSTGRE_PASSWORD}"
      - "POSTGRE_DB=${POSTGRE_DB}"
      - "POSTGRE_HOST=${POSTGRE_HOST}"
      - "POSTGRE_PORT=${POSTGRE_PORT}"
      - "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}"
      - "AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}"
      - "AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}"
      - "SNS_TOPIC_ARN=${SNS_TOPIC_ARN}"
      - "SNS_REGION=${SNS_REGION}"
    ports:
      - "${API_PORT}:8180"
